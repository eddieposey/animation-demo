{"mappings":"AAAA,MAAM,eAAe;IACnB,aAAc;QACZ,KAAK;QAEL,IAAI,mBAAmB;QACvB,MAAM,cAAc,IAAI,CAAC,aAAa;QACtC,MAAM,iBACJ,IAAI,CAAC,aAAa,aAAa,SAAS,sBAAsB;QAChE,MAAM,WAAW,SAAS,cAAc;QAExC,IAAI,CAAC,aAAa;YAChB,QAAQ,IACN;YAEF;QACF;QAEA,SAAS,YAAY,CAAC;;;;;gCAKM,EAAE,eAAe;;;;;;IAM7C,CAAC;QAED,IAAI,CAAC,YAAY,SAAS,QAAQ,UAAU;QAE5C,IAAI,CAAC,iBAAiB,SAAS;YAC7B,mBAAmB,qBAAqB,OAAO,OAAO;YAEtD,IAAI,CAAC,cACH,IAAI,YAAY,qBAAqB;gBACnC,QAAQ;oBAAE,MAAM;gBAAiB;gBACjC,UAAU;YACZ;QAEJ;IACF;AACF;AAEA,OAAO,eAAe,OAAO,iBAAiB;AAE9C,QAAQ,IAAI","sources":["src/index.js"],"sourcesContent":["class Toggle extends HTMLElement {\n  constructor() {\n    super()\n\n    let selectedLanguage = 'en'\n    const idAttribute = this.getAttribute('id')\n    const lightAttribute =\n      this.getAttribute('light') === 'true' ? 'army-toggle-light' : ''\n    const template = document.createElement('template')\n\n    if (!idAttribute) {\n      console.log(\n        'please check your markup. the toggle component is missing an id attribute'\n      )\n      return\n    }\n\n    template.innerHTML = `\n      <style>\n        @import './component.css';\n      </style>\n\n      <label class=\"army-toggle ${lightAttribute}\">\n        <input type=\"hidden\" name=\"toggle-1\" value=\"en\" />\n        <div class=\"army-toggle-text-left\">En</div>\n        <input type=\"checkbox\" name=\"toggle-1\" value=\"es\"/>\n        <div class=\"army-toggle-text-right\">Esp</div>\n      </label>\n    `\n\n    this.appendChild(template.content.cloneNode(true))\n\n    this.addEventListener('click', () => {\n      selectedLanguage = selectedLanguage === 'en' ? 'es' : 'en'\n\n      this.dispatchEvent(\n        new CustomEvent('selected-language', {\n          detail: { name: selectedLanguage },\n          composed: true,\n        })\n      )\n    })\n  }\n}\n\nwindow.customElements.define('toggle-button', Toggle)\n\nconsole.log(1)\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}